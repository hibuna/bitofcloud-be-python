services:
  db:
    container_name: boc-db
    image: postgres:16.4-alpine3.20
    env_file: ./.env
    environment:
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - POSTGRES_PASSWORD_FILE=/run/secrets/DB_ROOT_PASS
    user: postgres
    build:
      dockerfile: ./db/Dockerfile
    secrets:
      - DB_PASS
      - DB_ROOT_PASS
    ports:
      - 13001:5432
    volumes:
      - db_volume:/var/lib/postgresql/data/  # persists the data to named volume
      - ./db/init:/docker-entrypoint-initdb.d  # runs if the volume is empty
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=\"$(cat /run/secrets/DB_ROOT_PASS)\" psql -U postgres -c 'SELECT 1' || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 30s
      start_interval: 1s

  be:
    container_name: boc-be
    image: python:3.11-alpine
    env_file:
      .env
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    secrets:
      - DB_PASS
    ports:
      - 13101:8000
    working_dir: /app
    command: [
      "pipenv",
      "run",
      "fastapi",
      "dev",
      "src/main.py",
      "--host", "0.0.0.0"
    ]
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - ./src:/app/src
    restart: always

volumes:
  db_volume:
    name: boc-db-volume

secrets:
   DB_PASS:
     file: ./secrets/DB_PASS
   DB_ROOT_PASS:
     file: ./secrets/DB_ROOT_PASS